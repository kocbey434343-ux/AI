Tests Inventory (Part 3) Generated 2025-08-24
===========================================
Scope: Remaining tests (daily risk reset, indicators, reconciliation diff expansion, secret/tag scripts, quantize & correlation, partial fill protection, position sizing edge, unrealized PnL, UI, websocket utils, backtest skeleton, auto-heal).

Risk & Daily Ops
----------------
test_daily_risk_reset.py
 - Covers CR-0004 logic: _maybe_daily_risk_reset removes halt flag, clears guard_counters, logs RISK_RESET, updates date.
 - No-op case when same day ensures counters untouched.

Indicators & Scoring
--------------------
test_indicators.py
 - Unit tests for individual indicator calculators (RSI, MACD, Bollinger) and all-indicators aggregate including optional ADX.
 - score_indicators returns bounded total_score [0,100] and valid signal label.

Backtest Skeleton
-----------------
test_backtest_skeleton.py
 - Runs BacktestOrchestrator with dummy fetcher & signal generator; asserts trades/stats counts & pnl_pct.

Tag & Secret Utility Scripts
----------------------------
test_create_tag.py
 - Validates bump logic for initial and progression cases; dry-run path does not invoke git tag creation.

test_secret_scan.py
 - Detects BINANCE_API_KEY pattern; verifies ignore comment directive suppresses detection.

Reconciliation Enhancements & Auto-Heal
---------------------------------------
test_reconciliation_open_orders_diff.py
 - CR-0018 AC1–AC4: orphan_exchange_order detection, idempotency, transition to local orphan, reconciliation when exchange position appears.

test_reconciliation_auto_heal.py
 - CR-0015: missing protection triggers heal_attempted flag; idempotent on subsequent runs.

test_reconciliation.py
 - Baseline diff: missing_stop_tp vs protection present, orphan_exchange_position, orphan_local_position logging.

Adaptive Position Sizing Edge
-----------------------------
test_position_size_adaptive_edge.py
 - Clamps extreme ATR values to MIN/MAX multipliers; low score (30) neutral multiplier; high score (100) ratio ~1.444 vs neutral.

Partial Fill & Protection
-------------------------
test_partial_fill_protection_ac.py
 - CR-0012 AC1–AC4: partial fill updates filled/remaining, protection_qty revision, zeroing on completion, idempotent revise, VWAP entry recomputed.

test_partial_fill_protection.py
 - Legacy/manual path simulation of sequential partial fills and placeholder for future protection revision assertions.

Quantize & Correlation & Partial Exit
-------------------------------------
test_quantize_and_correlation.py
 - quantize below minQty -> 0, step rounding; correlation guard blocks correlated symbol; partial exit reduces remaining size & second level scale-out.

test_quantize_and_partial.py
 - (Empty placeholder) -> indicates intended future combined test; should be populated or removed.

Trailing, Partial, Persistence & History
----------------------------------------
test_trader_flow.py (refer Part 1)
 - End-to-end scenario (already documented Part 1) interacts with partial/trailing logic.

test_trailing_persist.py
 - Documents gap: scaled_out not persisted on reload (future CR).

test_trailing_history.py
 - CR-0016 persistence & executions row count increment (1 -> 2) after sequential trailing updates.

test_trailing_and_guards.py
 - ATR + classic trailing combined update; structured slog events assertion; outlier bar guard block; close_position DB close.

Anomaly & Metrics (see Part 2)
--------------------------------
(Referenced for completeness, not repeated.)

Unrealized PnL Aggregation
--------------------------
test_unrealized_total_pnl.py
 - CR-0014: empty 0%, single long +2% after price change, partial weighting (50% position -> 10% weighted when +20%), long+short aggregation (+5% each -> 10%).

test_metrics_unrealized_snapshot.py
 - CR-0017 adds unrealized_total_pnl_pct to metrics snapshot (0 then positive).

UI Tests
--------
test_ui_unrealized_pnl_label.py
 - _set_total_unreal_label formatting & color mapping (green/red/gray) for positive/negative/zero.

test_ui_tabs.py
 - Tabs presence (Closed, Signals), closed trades header column count, signal dedup and score formatting.

test_ws_symbols.py
 - _compute_ws_symbols prioritizes position symbols; includes buy (AL) signals; excludes SAT signals.

Websocket Utility
-----------------
test_ws_utils.py
 - should_restart_ws decision matrix: initial load, debounce suppression, set difference after debounce, set identity, empty sets, None handling edge cases.

Daily Risk & Guards
-------------------
test_risk_guards.py (not yet summarized in earlier parts; ensure to include if present—pending extraction if exists in repo.)

Coverage Gaps & Recommendations
-------------------------------
 - Empty test_quantize_and_partial.py should either be populated (combine quantize edge + partial exit scenario) or removed.
 - No tests for runtime_thresholds/_is_sane invalid cases; add negative tests.
 - No tests for runtime_costs persistence load/save; add.
 - order_state FSM unreferenced; add integration test once adopted.
 - UI: No test for signals trimming logic (capacity limit) – consider adding.
 - API: No test for price_stream restart/timeout.

Next Actions
------------
 - Address empty placeholder test file.
 - Add Part consolidation index or README linking Parts 1–3 for quick navigation.
 - Generate coverage map (module -> tests) to quantify untested lines.

End of tests_inventory_part3.txt
